{% block features %}
{% endblock %}
!
fabric forwarding anycast-gateway-mac {{ any_cast_mac }}
!
{% for vlan_map in vlan_list_map %}
vlan {{ vlan_map.vlan_id }}
  name {{ vlan_map.name }}
  vn-segment {{ vlan_map.vxlan_id|default(vxlan_prefix + vlan_map.vlan_id) }}
!
{% endfor %}
{#route_map_list = [{name: 'FABRIC_RMAP_REDIST-VRFA, tag: 999}, {name: 'FABRIC_RMAP_REDIST-VRFB, tag: 1000}]
  The idea is to have a route-map per TENANT or VRF so we can redistribute the subnets in BGP.
  RECOMENDATION: Use the tag with the same number of the L3VNI
#}
{% for vlan_map in vlan_list_map %}
{% if vlan_map.l3vni is defined and vlan_map.l3vni -%}
route-map FABRIC_RMAP_REDIST_VRF_{{ vlan_map.name }} permit 10
  match tag {{ vlan_map.vxlan_id|default(vxlan_prefix + vlan_map.vlan_id) }}
!
{% endif -%}
{% endfor %}
{#
#Try to include vPC in the configuration
#vrf context Keep-Alive
#  address-family ipv4 unicast
#}
!
{% for vlan_map in vlan_list_map %}
{% if vlan_map.l3vni is defined and vlan_map.l3vni -%}
vrf context {{ vlan_map.name }}
  description {{ vlan_map.name }}
  vni {{ vlan_map.vxlan_id|default(vxlan_prefix + vlan_map.vlan_id) }}
  rd auto
  address-family ipv4 unicast
    route-target both auto
    route-target both auto evpn
  address-family ipv6 unicast
    route-target both auto
    route-target both auto evpn
!
{% endif -%}
{% endfor -%}
{#
This commands required a reboot to take place.
without then supress-arp wont work
#}
hardware access-list tcam region vacl 0
hardware access-list tcam region arp-ether 256
{# This commands required a reboot to take place. #}
hardware qos ns-buffer-profile mesh
{# TODO: include VPC
vpc domain 105
  peer-switch
  peer-keepalive destination x.x.x.x source y.y.y.y vrf Keep-Alive
  peer-gateway
  ip arp synchronize
#}
!
{#
 The vlan_list_map is one per domain. This is only a requirement of this script.
vlan_list_map = [{vlan_id: 10, vxlan_id: 10010, name: 'WEB', ip_address: '10.0.0.1', vrf: 'TENANT-A' },
{vlan_id: 20, vxlan_id: 10020, name: 'DB', ip_address: '10.0.1.1', vrf: 'TENANT-B'},
{vlan_id: 30, vxlan_id: 10030, name: 'DB', vrf: 'TENANT-A'}]
ip_address is an optional key
route_map_list = [{name: 'FABRIC_RMAP_REDIST-VRFA, tag: 999}, {name: 'FABRIC_RMAP_REDIST-VRFB, tag: 1000}]
#}
{# IMPORTANT:  for some reason the IP address is not showing #}
{% for vlan_map in vlan_list_map -%}
{% if vlan_map.ip_address is defined or vlan_map.l3vni is defined -%}
interface VLAN{{ vlan_map.vlan_id }}
  description {{ vlan_map.name }}
  no shutdown
  vrf member {{ vlan_map.vrf }}
{% if vlan_map.ip_address is defined -%}
{% for l3vni in vlan_list_map -%}
{% if l3vni.name is equalto vlan_map.vrf %}
  ip address {{ vlan_map.ip_address }}/{{ vlan_map.mask }} tag {{ l3vni.vxlan_id }}
  fabric forwarding mode anycast-gateway
{% endif -%}
{% endfor -%}
!
{% elif vlan_map.l3vni %}
  ip forwarding
!
{% endif -%}
{% endif -%}
{% endfor -%}
interface nve1
  no shutdown
  source-interface loopback0
  host-reachability protocol bgp
  {% for vlan_map in vlan_list_map -%}
  {% if vlan_map.mcast_group is defined %}
  member vni {{ vlan_map.vxlan_id|default(vxlan_prefix + vlan_map.vlan_id) }}
    suppress-arp
    mcast-group {{ vlan_map.mcast_group }}
{% endif -%}
{% endfor %}
{#
!
interface loopback0
  ip address x.x.x.x/32
  ip address y.y.y.y/32 secondary
  ip router ospf UNDERLAY area 0.0.0.0
  ip pim sparse-mode
!
router ospf UNDERLAY
  router-id x.x.x.x
  log-adjacency-changes detail
router bgp 65000
  router-id x.x.x.x
  address-family ipv4 unicast
  neighbor x.x.x.x remote-as 65000
    update-source loopback0
    address-family ipv4 unicast
    address-family l2vpn evpn
      send-community both
  neighbor x.x.x.x remote-as 65000
    update-source loopback0
    address-family ipv4 unicast
    address-family l2vpn evpn
      send-community both
  vrf Untrust-Trust-Transit
    address-family ipv4 unicast
      advertise l2vpn evpn
      redistribute direct route-map FABRIC-RMAP-REDIST-SUBNET
      redistribute static route-map STATIC=>BGP
#}
!
evpn
{% for vlan_map in vlan_list_map -%}
{% if vlan_map.mcast_group is defined -%}
    vni {{ vlan_map.vxlan_id|default(vxlan_prefix + vlan_map.vlan_id) }} l2
      rd auto
      route-target import auto
      route-target export auto
{% endif -%}
{%- endfor -%}
!
